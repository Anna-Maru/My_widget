from typing import Union


def get_mask_card_number(number: Union[int, str]) -> str:
    """ Функция маскирует номер банковской карты в формате XXXX XX** **** XXXX.
        Формат маскировки:
          - первые 6 цифр отображаются полностью:
            отдельные блоки — первые 4 цифры (XXXX),
            затем следующие 2 цифры плюс две звездочки (XX**),
          - далее — четыре звездочки (****),
          - и последние 4 цифры видимы (XXXX).
        Args:
            number (int | str): Номер карты, возможно с пробелами.
        Return:
            str: Строка с замаскированным номером.
                 Если длина строки менее 10 символов после очистки,
                 возвращается строка без изменений."""
    s = str(number).replace(" ", "")
    if len(s) < 10:
        return s

    part1 = s[:4]
    part2 = s[4:6] + "**"
    part3 = "****"
    part4 = s[-4:]

    return f"{part1} {part2} {part3} {part4}"


def get_mask_account(number: Union[int, str]) -> str:
    """ Функция маскирует номер банковского счёта в формате **XXXX.
        Формат маскировки:
          - две звёздочки в начале,
          - далее — последние 4 цифры счёта.
        Args:
            number (int | str): Номер счёта, возможно с пробелами.
        Return:
            str: Строка с замаскированным счётом.
                 Если длина строки ≤4 после очистки, возвращается без изменений."""
    s = str(number).replace(" ", "")
    if len(s) <= 4:
        return s

    return f"**{s[-4:]}"
